// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=true, sel=address[12..13], a=RAM4KZero, b=RAM4KOne, c=RAM4KTwo, d=RAM4KThree);
    Mux16(a=RAM4KZeroOut, b=in, sel=RAM4KZero, out=RAM4KZeroIn);
    Mux16(a=RAM4KOneOut, b=in, sel=RAM4KOne, out=RAM4KOneIn);
    Mux16(a=RAM4KTwoOut, b=in, sel=RAM4KTwo, out=RAM4KTwoIn);
    Mux16(a=RAM4KThreeOut, b=in, sel=RAM4KThree, out=RAM4KThreeIn);
    RAM4K(in=RAM4KZeroIn, load=load, address=address[0..11], out=RAM4KZeroOut);
    RAM4K(in=RAM4KOneIn, load=load, address=address[0..11], out=RAM4KOneOut);
    RAM4K(in=RAM4KTwoIn, load=load, address=address[0..11], out=RAM4KTwoOut);
    RAM4K(in=RAM4KThreeIn, load=load, address=address[0..11], out=RAM4KThreeOut);
    Mux4Way16(a=RAM4KZeroOut, b=RAM4KOneOut, c=RAM4KTwoOut, d=RAM4KThreeOut, sel=address[12..13], out=out); 
}